#include <iostream>
#include <vector>
using namespace std;


struct wdp {
	vector<int> liczby;
	vector<int> wystapienia;
};

void wypisz(vector<int> tab) {
	for (int i = 0; i < tab.size(); i++) {
		cout << tab[i] << " ";
	}
	cout << endl;
}

int maximum(vector<int> tab) {
	int max = tab[0];
	for (int i = 1; i < tab.size(); i++) {
		if (max < tab[i]) {
			max = tab[i];
		}
	}
	return max;
}

int suma(vector<int> tab) {
	int sumarum = 0;
	for (int i = 0; i < tab.size(); i++) {
		sumarum += tab[i];
	}
	return sumarum;
}

bool czyNalezy(vector<int> tab, int elem) {
	for (int i = 0; i < tab.size(); i++) {
		if (elem == tab[i]) {
			return true;
		}
	}
	return false;
}

bool czyZawiera(vector<int> tab, vector<int> tab2) {
	for (int i = 0; i < tab2.size(); i++) {
		if (!czyNalezy(tab, tab2[i])) {
			return false;
		}
	}
	return true;
}

int index(vector<int> tab, int elem, int pomin = 0) {
	for (int i = 0; i < tab.size(); i++) {
		if (elem == tab[i] && pomin-- < 1) {
			return i;
		}
	}
	return -1;
}

vector<int> unikalnosc(vector<int> tab) {
	vector<int> wynik;
	for (int i = 0; i < tab.size(); i++) {
		if (!czyNalezy(wynik, tab[i])) {
			wynik.push_back(tab[i]);
		}
	}
	return wynik;
}

vector<int> wybierz(vector<int> tab, int dzielnik = 2, int reszta = 0) {
	vector<int> wynik;
	for (int i = 0; i < tab.size(); i++) {
		if (tab[i] % dzielnik == reszta) {
			wynik.push_back(tab[i]);
		}
	}
	return wynik;
}

wdp czestosc(vector<int> tab) {
	wdp wynik;
	for (int i = 0; i < tab.size(); i++) {
		int ind = index(wynik.liczby, tab[i]);
		if (ind == -1) {
			wynik.liczby.push_back(tab[i]);
			wynik.wystapienia.push_back(1);
		}
		else {
			wynik.wystapienia[ind]++;
		}
	}
	return wynik;
}

void wypisz(wdp zm) {
	wypisz(zm.liczby);
	wypisz(zm.wystapienia);
}

vector<int> generuj(int n, int min, int max) {
	vector<int> wynik;
	int dl = max - min + 1;
	for (int i = 0; i < n; i++) {
		int liczba = rand()%dl+min;
		wynik.push_back(liczba);
	}
	return wynik;
}

vector<int> generuj(int n, int max = 50) {
	return generuj(n, 0, max);
}

void gwiazdki(int elem) {
	int n = 0;
	for (int i = 0; i < elem; i++) {
		for (int j = 0; j < n; j++) {
			cout << "*";
		}
		cout << endl;
		n++;
	}
}

int main()
{
	vector<int> liczbyduzo = { 1,2,3,3,3,4,4,5,5,5,5,6,7,8,9 };
	vector<int> liczbymalo = { 2,1,3,7 };
	wypisz(liczbyduzo);
	wypisz(liczbymalo);
	cout << maximum(liczbyduzo) << endl;
	cout << suma(liczbymalo) << endl;
	cout << czyNalezy(liczbyduzo, 10) << endl;
	cout << czyZawiera(liczbyduzo, liczbymalo) << endl;
	cout << index(liczbyduzo, 5, 3) << endl;
	vector<int> unik = unikalnosc(liczbyduzo);
	wypisz(unik);
	vector<int> wyb = wybierz(liczbyduzo, 3, 2);
	wypisz(wyb);
	wdp cze = czestosc(liczbyduzo);
	wypisz(cze);
	gwiazdki(20);
	vector<int> gen = generuj(5, 20, 30);
	wypisz(gen);


	generuj(5);
	generuj(5 , 10);
	generuj(5, 5, 10);
}
