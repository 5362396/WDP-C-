#include <iostream>
#include <vector>
using namespace std;

void wypisz(vector<int> tab) {
	for (int i = 0; i < tab.size(); i++) {
		cout << tab[i] << " ";
	}
	cout << endl;
}

int maximum(vector<int> tab) {
	int max = tab[0];
	for (int i = 1; i < tab.size(); i++) {
		if (max < tab[i]) {
			max = tab[i];
		}
	}
	return max;
}

int suma(vector<int> tab) {
	int wynik = 0;
	for (int i = 0; i < tab.size(); i++) {
		wynik += tab[i];
	}
	return wynik;
}

bool czyNalezy(vector<int> tab, int elem) {
	for (int i = 0; i < tab.size(); i++) {
		if (elem == tab[i]) {
			return true;
		}
	}
	return false;
}

bool czyZawiera(vector<int> tab, vector<int> tab2) {
	for (int i = 0; i < tab2.size(); i++) {
		if (!czyNalezy(tab, tab2[i])) {
			return false;
		}
	}
	return true;
}

int index(vector<int> tab, int elem, int pomin = 0) {
	for (int i = 0; i < tab.size(); i++)
	{
		if (tab[i] == elem && pomin-- < 1) {
			return i;
		}
	}
	return -1;
}

vector<int> unikalnosc(vector<int> tab) {
	vector<int> wynik;
	for (int i = 0; i < tab.size(); i++) {
		if (!czyNalezy(wynik, tab[i])) {
			wynik.push_back(tab[i]);
		}
	}
	return wynik;
}

vector<int> wybierz(vector<int> tab, int dzielnik = 2, int reszta = 0) {
	vector<int> wynik;
	for (int i = 0; i < tab.size(); i++) {
		if (tab[i] % dzielnik == reszta) {
			wynik.push_back(tab[i]);
		}
	}
	return wynik;
}

int main()
{
	vector<int> liczby = { 1,2,3,4,5,6,7,4,4,3,9,10,11,12,13,14,15,16,17,18,19,20 };
	vector<int> liczby2 = { 2,1,3,7 };
	wypisz(liczby);
	cout << maximum(liczby) << endl;
	cout << suma(liczby) << endl;
	cout << czyNalezy(liczby, 9) << endl;
	cout << czyZawiera(liczby, liczby2) << endl;
	cout << index(liczby2, 7, 0) << endl;
	vector<int> unik = unikalnosc(liczby);
	wypisz(unik);

	vector<int> wyb = wybierz(liczby);
	wypisz(wyb);
	vector<int> wyb2 = wybierz(liczby, 3);
	wypisz(wyb2);
	vector<int> wyb3 = wybierz(liczby, 4, 3);
	wypisz(wyb3);

	return 0;
}
